dataType: Level
children:
  - dataType: GameObject
    mass: 0
    physicsBodyGeneration: triangleMeshShape
    geometry: DemoLevel.osgt
    position: {x: 0, y: 0, z: 0}
    rotation: {x: 0, y: 0, z: 0, w: 1}
  - dataType: Controller
    radius: 3
    physicsBodyGeneration: none
    mass: inf
    geometry: Switch.osgt
    position: {x: 0, y: 28, z: 0}
    rotation: {x: 0, y: 0, z: 0, w: 1}
    functions:
      onInteraction: |
        void onInteraction(Controller@ self)
        {
        	self.sendMessage("toggle");
        }
        
    controlled:
      - dataType: ControlledObject
        mass: 0
        geometry: SlidingDoorOuter.osgt
        physicsBodyGeneration: convexHullShape
        position: {x: 0, y: 8, z: 0}
        rotation: {x: 0, y: 0, z: 0, w: 1}
        stateMachine:
          dataType: StateMachine
          defaultState: closed
          states:
            closed:
              dataType: State
              name: closed
              functions:
                onEnter: |
                  void onEnter(Door@ self)
                  {
                  	//self.playAnimation("close");
                  	self.close();
                  	print("closing");
                  }
                  
            open:
              dataType: State
              name: open
              functions:
                onEnter: |
                  void onEnter(Door@ self)
                  {
                  	//self.playAnimation("open");
                  	self.open();
                   	print("opening");
                  }
                  
        innerPart:
          dataType: GameObject
          mass: 10
          physicsBodyGeneration: convexHullShape
          geometry: SlidingDoorInner.osgt
          position: {x: 13.62702, y: 7.995718, z: -1769.149}
          rotation: {x: -0.1967860783155117, y: -0.03090490478351619, z: 0.8133684432224331, w: 0.5465819482420412}
        functions:
          onMessage_toggle: |
            void onMessage_toggle(ControlledObject@ self)
            {
                if(self.getStateName() == "closed")
                    self.changeState("open");
                else
                    self.changeState("closed");
            }
            
  - dataType: Fighter
    maxHealth: 5
    physicsBodyGeneration: none
    team: Enemy
    mass: inf
    geometry: humanmodelNoBones.osg
    position: {x: 5, y: 5, z: 0}
    rotation: {x: 0, y: 0, z: 0, w: 1}
    stateMachine:
      dataType: StateMachine
      defaultState: idle
      states:
        idle:
          dataType: State
          name: idle
          functions:
            onUpdate: |
              void onUpdate(Fighter@ self)
              {
                if(self.getClosestEnemy() !is null)
                  self.useBestAttackOn(self.getClosestEnemy());
                else
                	print("No nearby enemies");
              }
              
        attacking:
          dataType: State
          name: attacking
          functions:
            onUpdate: |
              void onUpdate(Fighter@ self)
              {
                if(self.getCurrentAttack().done())
                	self.returnToPreviousState();
              }
              
    weapon:
      dataType: Weapon
      coolDownTime: 2.5
      physicsBodyGeneration: none
      geometry: staff.png
      position: {x: 0, y: 0, z: 1}
      rotation: {x: 0, y: 0, z: 0, w: 1}
      projectile:
        dataType: Projectile
        geometry: circle.png
        damages:
          - dataType: damage
            amount: 2
            type: PURE_MAGIC
    resistances:
      dataType: unordered_map
      ACID: 0
      COLD: 0
      HOT: 0
    attacks:
      - dataType: Attack
        duration: 2.5
        damages:
          - dataType: damage
            amount: 2
            type: PURE_MAGIC
  - dataType: Player
    maxHealth: 100
    physicsBodyGeneration: none
    mass: inf
    team: Player
    geometry: humanmodelNoBones.osg
    position: {x: 1.089267, y: 7.294517, z: -0.04000688}
    rotation: {x: 0, y: 0, z: 0.9988047198267813, w: -0.04887874437570024}
    weapon:
      dataType: Weapon
      coolDownTime: 2.5
      physicsBodyGeneration: none
      geometry: staff.png
      position: {x: 0, y: 0, z: 1}
      rotation: {x: 0, y: 0, z: 0, w: 1}
      projectile:
        dataType: Projectile
        geometry: Fireball.png
        damages:
          - dataType: damage
            amount: 2
            type: HOT
    resistances:
      dataType: unordered_map
      PURE_MAGIC: 0
      ACID: 0
      COLD: 0
      HOT: 0
    stateMachine:
      dataType: StateMachine
      defaultState: idle
      states:
        idle:
          dataType: State
          name: idle
          functions:
            onUpdate: |
              void onUpdate(Fighter@ self)
              {
                //if(self.getClosestEnemy())
                 // self.useBestAttackOn(self.getClosestEnemy());
              }
              
        attacking:
          dataType: State
          name: attacking
          functions:
            onUpdate: |
              void onUpdate(Fighter@ self)
              {
                if(self.getCurrentAttack().done())
                	self.returnToPreviousState();
              }
              
    attacks:
      - dataType: Attack
        duration: 2
        damages:
          - dataType: damage
            amount: 2
            type: HOT